function val = astronomical_constants(constant)
  %Function for accessing astronomical constants
  %INPUT - 
  %1. constant (string) - String corresponding to the astronomical constant
  %OUTPUT - 
  %   ellipsoid (struct) - Structure containing the value, unit and uncertainity for the constant

  if (strcmp(constant, "k")==1)
    val.value = 1.720209895*1e-2;
    val.units = '';
  elseif (strcmp(constant, "LG")==1)
    val.value = 6.969290134*1e-10;
    val.units = '';
  elseif (strcmp(constant, "LB")==1)
    val.value = 1.550519768*1e-8;
    val.units = '';
  elseif (strcmp(constant, "TDB")==1)
    val.value = -6.55*1e-5;
    val.units = 's';
  elseif (strcmp(constant, "theota0")==1)
    val.value = 0.7790572732640;
    val.units = 'rev';
  elseif (strcmp(constant, "dtheta/dt")==1)
    val.value = 1.00273781191135448;
    val.units = 'rev/UT1day';
  elseif (strcmp(constant, "c")==1)
    val.value = 299792458;
    val.units = 'ms-1';
  elseif (strcmp(constant, "G")==1)
    val.value = 6.67428*1e-11;
    val.units = 'm3kg-1s-2';
    val.uncertainity = 6.7*1e-15;
  elseif (strcmp(constant, "GM")==1)
    val.value = 3.986004418*1e14;
    val.units = 'm3s-2';
    val.uncertainity = 8*1e5;
  elseif (strcmp(constant, "GMh")==1)
    val.value = 1.32712442099*1e-20;
    val.units = 'm3s-2';
    val.uncertainity = 1e10;
  elseif (strcmp(constant, "J2s")==1)
    val.value = 2e-7;
    val.units = '';
  elseif (strcmp(constant, "mu")==1)
    val.value = 0.0123000371;
    val.units = '';
    val.uncertainity = 4e-10;
  elseif (strcmp(constant, "ae")==1)
    val.value = 6378136.6;
    val.unit = 'm';
    val.uncertainity = 0.1;
  elseif (strcmp(constant, "J2")==1)
    val.value = 1.0826359*1e-3;
    val.unit = '';
    val.uncertainity = 1e-10;
  elseif (strcmp(constant, "a")==1)
    val.value = 6378137.0;
    val.unit = 'm';
  elseif (strcmp(constant, "b")==1)
    val.value = 6356752.3142;
    val.unit = 'm';
  elseif (strcmp(constant, "equitorial_grav")==1)
    val.value = 9.7803253359;
    val.unit = 'm/s2';
  elseif (strcmp(constant, "polar_grav")==1)
    val.value = 9.8321849378;
    val.unit = 'm/s2';
  elseif (strcmp(constant, "1/f")==1)
    val.value = 298.25642;
    val.unit = '';
    val.uncertainity = 0.00001;
  elseif (strcmp(constant, "gE")==1)
    val.value = 9.7803278;
    val.unit = 'ms-2';
    val.uncertainity = 1e-6;
  elseif (strcmp(constant, "W0")==1)
    val.value = 62636856.0;
    val.unit = 'm2s-2';
    val.uncertainity = 0.5;
  elseif (strcmp(constant, "R0")==1)
    val.value = 6363672.6;
    val.unit = 'm';
    val.uncertainity = 0.1;
  elseif (strcmp(constant, "H")==1)
    val.value = 3273795*1e-9;
    val.unit = '';
    val.uncertainity = 1e-9;
  elseif (strcmp(constant, "e0")==1)
    val.value = 84381.406;
    val.unit = "''";
    val.uncertainity = 0.001;
  elseif (strcmp(constant, "au")==1)
    val.value = 1.49597870700*1e11;
    val.unit = 'm';
    val.uncertainity = 3;
  elseif (strcmp(constant, "LC")==1)
    val.value = 1.48082686741*1e-8;
    val.unit = '';
    val.uncertainity = 2e-17;
  endif
 endfunction